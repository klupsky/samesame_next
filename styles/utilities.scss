@import './variables.scss';

/* 
_____________________________________
The UTILITIES have to be configured for every project.
This is just an example.
The names need to stay the same to ensure consistency throughout projects. 
Name changes + additional classes need to be documented and/or updated in notion. 

Prefixes:

f- = font
p = paragraph
pos = position
d = display
t = text-transforms/ decorations
w = width
h = height
flex = flex
grid = grid
bd = border
trans = transition

_____________________________________
*/ 


/* 
_____________________________________
FONT STYLES / Text Tranforms / Decorations
_____________________________________
*/ 

// Font Family: 

.f-main {
    font-family: $f-light;
}

.f-black {
    font-family: $f-black;
}

// Text Transforms / Decorations

.t-uppercase {
    text-transform: uppercase;
}

.t-lowercase {
    text-transform: lowercase;
}

.t-capitalize {
    text-transform: capitalize;
}

.t-underline {
    text-decoration: underline;
}

.t-line-through {
    text-decoration: line-through;
}


/* 
_____________________________________
PARAGRAPH, HEADLINE STYLES
_____________________________________
*/ 

.p {
    font-size: $f-sm;

    @media screen and (min-width: $tablet) {
        font-size: $f-md;
    }    
} 

.p-xs {
    font-size: $f-xs;
}

.p-sm {
    font-size: $f-sm;
}

.h1 {
    font-size: $f-xl;

    @media screen and (min-width: $tablet) {
        font-size: $f-xxl;
    }   
}

.h2 {
    font-size: $f-lg;

    @media screen and (min-width: $tablet) {
        font-size: $f-xl;
    }   
}

.h3 {
    font-size: $f-md;

    @media screen and (min-width: $tablet) {
        font-size: $f-lg;
    }   
}


/* 
_____________________________________
WIDTH
_____________________________________
*/ 

.w-full {
    width: 100vw;
}

.w-100 {
    width: 100%;
} 

.w-80 {
    width: 80%;
} 

.w-50 {
    width: 50%;
} 

.w-min-full {
    min-width: 100vw;
}

/* 
_____________________________________
HEIGHT
_____________________________________
*/ 

.h-full {
    height: 100vh;
}

.h-100 {
    height: 100%;
} 

.h-80 {
    height: 80%;
} 

.h-50 {
    height: 50%;
} 

.h-min-full {
    min-height: 100vh;
}

/* 
_____________________________________
POSITIONING, ps
_____________________________________
*/ 

// Position Absolute

.pos-absolute {
    position: absolute;
} 

.pos-absolute-right {
    position: absolute;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
} 

.absolute-center-top {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}

.pos-absolute-center {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
} 

// Position Fixed

.pos-fixed {
    width: 100%;
    position: fixed;
}  

.pos-fixed-top {
    width: 100%;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
}  

.pos-fixed-bottom {
    width: 100%;
    position: fixed;
    bottom: 0;
    left: 0;
    right: 0;
}  

// Position Relative

.relative {
    position: relative;
} 

/* 
_____________________________________
DISPLAY, d
_____________________________________
*/ 

// accessibile hiding elements
.d-visually-hidden {
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    height: 1px;
    overflow: hidden;
    position: absolute;
    white-space: nowrap;
    width: 1px;
}
  
.d-none {
    display: none;
}
  
.d-inline-block {
    display: inline-block;
}

.d-block {
    display: block;
}

.d-flex {
    display: flex;
}

/* 
_____________________________________
FLEXBOX, flex
_____________________________________
*/ 

.flex-wrap-row {
    flex-wrap: row;
}

.flex-wrap-col {
    flex-wrap: column;
}

.flex-justify-between {
    width: 100%;
    justify-content: space-between;
    align-items: center;
}

.flex-center {
    width: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
}

.flex-row {
    flex-direction: row;
}

.flex-col {
    flex-direction: column;
}

.flex-align-center {
    align-items: center;
}

.flex-align-between {
    align-items: space-between;
}


/* 
_____________________________________
GRIDS 
_____________________________________
*/ 

.grid-12 {
    display: grid;
    grid-template-columns: repeat(6, minmax(0, 1fr));
    grid-gap: $pd-md;

    @media screen and (min-width: $tablet) {
        grid-template-columns: repeat(12, minmax(0, 1fr));
    }
}

.grid-start-1 {
    grid-column: 1 / -1;
}

.grid-start-2 {
    grid-column: 1 / -1;

    @media screen and (min-width: $tablet) {
        grid-column: 2 / -1;
    }
}

.grid-start-3 {
    grid-column: 1 / -1;

    @media screen and (min-width: $tablet) {
        grid-column: 3 / -1;
    }
}

.grid-start-4 {
    grid-column: 1 / -1;

    @media screen and (min-width: $tablet) {
        grid-column: 4 / -1;
    }
}

.grid-start-5 {
    grid-column: 1 / -1;

    @media screen and (min-width: $tablet) {
        grid-column: 5 / -1;
    }
}

.grid-start-6 {
    grid-column: 1 / -1;

    @media screen and (min-width: $tablet) {
        grid-column: 6 / -1;
    }
}

.grid-start-7 {
    grid-column: 1 / -1;

    @media screen and (min-width: $tablet) {
        grid-column: 7 / -1;
    }
}

.grid-start-8 {
    grid-column: 1 / -1;

    @media screen and (min-width: $tablet) {
        grid-column: 8 / -1;
    }
}

.grid-start-9 {
    grid-column: 9 / -1;
}

.grid-start-10 {
    grid-column: 10 / -1;
}

.grid-start-11 {
    grid-column: 11 / -1;
}

.grid-start-12 {
    grid-column: 12 / -1;
}

.grid-span-1 {
    grid-column: span 1;
}

.grid-span-2 {
    grid-column: span 2;
}

.grid-span-3 {
    grid-column: span 6;

    @media screen and (min-width: $tablet) {
        grid-column: span 3;
    }
}

.grid-span-4 {
    grid-column: span 6;

    @media screen and (min-width: $tablet) {
        grid-column: span 4;
    }
}

.grid-span-6 {
    grid-column: span 6;
}

.grid-span-12 {
    grid-column: span 6;

    @media screen and (min-width: $tablet) {
        grid-column: span 12;
    }
}

/* 
_____________________________________
MARGIN/ PADDING
_____________________________________
*/ 

// Padding

.pd {
    padding: $pd-md;

    @media screen and (min-width: $tablet) {
        padding: $pd-lg;
    }
}

.pd-md {
    padding: $pd-md;
}

.pd-xs {
    padding: $pd-xs;
}

.pd-none {
    padding: 0;
}

.pd-none-top {
    padding-top: 0;
}

.pd-none-bottom {
    padding-bottom: 0;
}

// Margin

.m {
    margin: $pd-md;

    @media screen and (min-width: $tablet) {
        margin: $pd-lg;
    }
}

.m-none {
    margin: 0;
}

.m-none-bottom {
    margin-bottom: 0;
}

.m-none-top {
    margin-top: 0;
}


/* 
_____________________________________
OVERFLOWS
_____________________________________
*/ 

.overflow-hidden {
    overflow: hidden;
}

.overflow-visible {
    overflow: visible;
}

/* 
_____________________________________
TRANSITIONS
_____________________________________
*/ 

.trans-all {
    transition: all 0.3s ease;
}

.trans-rotate {
    transition: all 0.3s ease;
    &:hover {
        transform: rotate(90deg);
    } 
}

/* 
_____________________________________
BORDERS
_____________________________________
*/ 

.bd {
    border: $bd-border-main;
} 

.bd-inverted {
    border: $bd-border-main-inverted;
} 

.bd-radius {
    border-radius: $bd-border-radius;
} 

.bd-radius-round {
    border-radius: 50%;
} 


/* 
_____________________________________
CURSOR/ POINTER
_____________________________________
*/ 

.cursor-none {
    pointer-events: none;
}

.cursor-pointer {
    cursor: pointer;
}

.cursor-disabled {
    cursor: no-drop;
}

.cursor-default {
    cursor: pointer;
}

/* 
_____________________________________
SPACINGS
_____________________________________
*/ 

.m-top-xl {
    margin-top: $pd-lg;

    @media screen and (min-width: $tablet) {
        margin-top: $pd-xl;
    }
}

.m-top-lg {
    margin-top: $pd-md;
    
    @media screen and (min-width: $tablet) {
        margin-top: $pd-lg;
    }
}

.m-top-md {
    margin-top: $pd-sm;
    
    @media screen and (min-width: $tablet) {
        margin-top: $pd-md;
    }
}

.m-top-sm {
    margin-top: $pd-sm;
}

.m-bottom-xl {
    margin-bottom: $pd-lg;

    @media screen and (min-width: $tablet) {
        margin-bottom: $pd-xl;
    }
}

.m-bottom-lg {
    margin-bottom: $pd-md;
    
    @media screen and (min-width: $tablet) {
        margin-bottom: $pd-lg;
    }
}

.m-bottom-md {
    margin-bottom: $pd-sm;
    
    @media screen and (min-width: $tablet) {
        margin-bottom: $pd-md;
    }
}

.m-bottom-sm {
    margin-bottom: $pd-sm;
}

.m-right-sm {
    margin-right: $pd-sm;
}

.m-left-sm {
    margin-left: $pd-sm;
}

.m-right-sm-remove-last {
    margin-right: $pd-sm;

    &:last-child {
        margin-right: 0;
    }
}

.m-right-xs-remove-last {
    margin-right: $pd-xs;

    &:last-child {
        margin-right: 0;
    }
}

.m-left-sm-remove-last {
    margin-left: $pd-sm;

    &:last-child {
        margin-left: 0;
    }
}

.m-left-xs-remove-last {
    margin-left: $pd-xs;

    &:last-child {
        margin-left: 0;
    }
}

// this will keep the buttons + input fields the same size
.input-spacing {
    padding: rem(5) rem(10);

    @media screen and (min-width: $tablet) {
        padding: rem(10) rem(20);
    }
}
